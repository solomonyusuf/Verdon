@page "/home"
@inject ApplicationDbContext _db
@inject UploadController _upload
@inject UserService _usr
@attribute [Authorize(Roles = "User,HOC,Admin")]
@inject NavigationManager router

<br />
<div class="container-fluid" data-aos="zoom-out">
    <h4>STUDENT DASHBOARD</h4>
    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card border-start-success py-2">
                <div class="card-body">
                    <div class="row align-items-center no-gutters">
                        <div class="col me-2">
                            <div class="text-uppercase text-success fw-bold text-xs mb-1"><span>Lectures</span></div>
                            <div class="text-dark fw-bold h5 mb-0"><span>@lectures.Count()</span></div>
                        </div>
                        <div class="col-auto"><i class="fas fa-book-reader fa-2x text-gray-300"></i></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card border-start-success py-2">
                <div class="card-body">
                    <div class="row align-items-center no-gutters">
                        <div class="col me-2">
                            <div class="text-uppercase text-success fw-bold text-xs mb-1"><span> Quizzes</span></div>
                            <div class="text-dark fw-bold h5 mb-0"><span>@quiz.Count()</span></div>
                        </div>
                        <div class="col-auto"><i class="fas fa-rocket fa-2x text-gray-300"></i></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card border-start-info py-2">
                <div class="card-body">
                    <div class="row align-items-center no-gutters">
                        <div class="col me-2">
                            <div class="text-uppercase text-info fw-bold text-xs mb-1"><span>Storage (@(maxSpace / 1000)GB)</span></div>
                            <div class="row g-0 align-items-center">
                                <div class="col-auto">
                                    <div class="text-dark fw-bold h5 mb-0 me-3"><span>  @store MB </span></div>
                                </div>
                                <div class="col">
                                    <div class="progress progress-sm">
                                        <div class="progress-bar bg-info" aria-valuenow="50" aria-valuemin="0" aria-valuemax="@maxSpace" style="width: @((store * 100)/maxSpace)%;"><span class="visually-hidden">50%</span></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-auto"><i class="fas fa-clipboard-list fa-2x text-gray-300"></i></div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-lg-12 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="text-primary fw-bold m-0">Storage Allocation</h6>
                </div>
                <div class="card-body">

                    <h4 class="small fw-bold">Lessons<span class="float-end">@((lesson * 100) / maxSpace) %</span></h4>
                    <div class="progress mb-4">
                        <div class="progress-bar bg-danger" aria-valuenow="20" aria-valuemin="0" aria-valuemax="@maxSpace" style="width: @((lesson * 100)/maxSpace)%;"></div>
                    </div>
                    <h4 class="small fw-bold">Assignments<span class="float-end">@((assig * 100) / maxSpace) %</span></h4>
                    <div class="progress mb-4">
                        <div class="progress-bar bg-warning" aria-valuenow="40" aria-valuemin="0" aria-valuemax="@maxSpace" style="width: @((assig * 100)/maxSpace)%;"></div>
                    </div>
                    <h4 class="small fw-bold">Resources<span class="float-end">@((resor * 100) / maxSpace) %</span></h4>
                    <div class="progress mb-4">
                        <div class="progress-bar bg-primary" aria-valuenow="60" aria-valuemin="0" aria-valuemax="@maxSpace" style="width: @((resor * 100)/maxSpace)%;"></div>
                    </div>

                </div>
            </div>

        </div>
    </div>
</div>

@code {

    public List<Lecture> lectures = new();
    public List<PrivateQuiz> quiz = new();
    public string department;
    public long store;
    public long lesson;
    public long assig;
    public long resor;
    public long maxSpace = 2000;
    protected override async Task OnInitializedAsync()
    {
        var e = await _usr.CurrentUser();
        if (e.MatricNo == null || e.Department == null || e.FirstName == null || e.LastName == null || e.Image == null)
            router.NavigateTo($"/profile");
        department = e.Department;
        if (department != null)
                await GetAll();
    }

    async Task GetAll()
    {
        try
        {
            lectures = await _db.Lecture.Where(x => x.Department == department)
            .Include(x => x.Lessons)
            .Include(x => x.Assignment)
            .Include(x => x.Resources)
            .ToListAsync();
            quiz = await _db.PrivateQuiz.Where(x => x.Department == department).ToListAsync();
            lectures.ForEach(x =>
            {
                store = ((x.Lessons.Select(s => int.Parse(s.Size)).Sum() +
                            x.Assignment.Select(s => int.Parse(s.Size)).Sum()
                            + x.Resources.Select(s => int.Parse(s.Size)).Sum()) / 1024);
                lesson = (x.Lessons.Select(s => int.Parse(s.Size)).Sum()) / 1024;
                assig = (x.Assignment.Select(s => int.Parse(s.Size)).Sum()) / 1024;
                resor = (x.Resources.Select(s => int.Parse(s.Size)).Sum() / 1024);
            });
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
}
