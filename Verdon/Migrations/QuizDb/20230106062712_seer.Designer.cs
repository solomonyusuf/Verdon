// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Verdon.Data;

namespace Verdon.Migrations.QuizDb
{
    [DbContext(typeof(QuizDbContext))]
    [Migration("20230106062712_seer")]
    partial class seer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Verdon.Core.Dynamic.PrivateAttempt", b =>
                {
                    b.Property<Guid>("PrivateAttemptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PrivateQuestionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuizId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Response")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("PrivateAttemptId");

                    b.ToTable("PrivateAttempt");
                });

            modelBuilder.Entity("Verdon.Core.Dynamic.PrivateOption", b =>
                {
                    b.Property<Guid>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alphabet")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PrivateQuestionId")
                        .HasColumnType("TEXT");

                    b.HasKey("OptionId");

                    b.HasIndex("PrivateQuestionId");

                    b.ToTable("PrivateOption");
                });

            modelBuilder.Entity("Verdon.Core.Dynamic.PrivateQuestion", b =>
                {
                    b.Property<Guid>("PrivateQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PrivateQuizId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("PrivateQuestionId");

                    b.HasIndex("PrivateQuizId");

                    b.ToTable("PrivateQuestion");
                });

            modelBuilder.Entity("Verdon.Core.Dynamic.PrivateQuiz", b =>
                {
                    b.Property<Guid>("PrivateQuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Factor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuizId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrivateQuizId");

                    b.ToTable("PrivateQuiz");
                });

            modelBuilder.Entity("Verdon.Core.Dynamic.PrivateQuizResult", b =>
                {
                    b.Property<string>("PrivateQuizResultId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MatricNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PrivateQuizId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Score")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("PrivateQuizResultId");

                    b.HasIndex("PrivateQuizId");

                    b.ToTable("PrivateQuizResult");
                });

            modelBuilder.Entity("Verdon.Core.Dynamic.Track", b =>
                {
                    b.Property<string>("TrackId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("QId")
                        .HasColumnType("TEXT");

                    b.HasKey("TrackId");

                    b.ToTable("Track");
                });

            modelBuilder.Entity("Verdon.Core.Dynamic.PrivateOption", b =>
                {
                    b.HasOne("Verdon.Core.Dynamic.PrivateQuestion", null)
                        .WithMany("Options")
                        .HasForeignKey("PrivateQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Verdon.Core.Dynamic.PrivateQuestion", b =>
                {
                    b.HasOne("Verdon.Core.Dynamic.PrivateQuiz", null)
                        .WithMany("PrivateQuestions")
                        .HasForeignKey("PrivateQuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Verdon.Core.Dynamic.PrivateQuizResult", b =>
                {
                    b.HasOne("Verdon.Core.Dynamic.PrivateQuiz", null)
                        .WithMany("PrivateQuizResults")
                        .HasForeignKey("PrivateQuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Verdon.Core.Dynamic.PrivateQuestion", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Verdon.Core.Dynamic.PrivateQuiz", b =>
                {
                    b.Navigation("PrivateQuestions");

                    b.Navigation("PrivateQuizResults");
                });
#pragma warning restore 612, 618
        }
    }
}
