@page "/add/lecture"
@layout _LecturerLayout
@inject ApplicationDbContext _db
@inject NavigationManager router
@inject UserService _usr
<div class="container-fluid col-lg-8" data-aos="zoom-out">
    <div class="card">
        <div class="card-body">
            <EditForm Model="@lect" OnSubmit="@Post" class="card-body">
                <h1><b>Add Lecture</b></h1><br />
                <div class="col-md-6 form-group">
                    <InputText @bind-Value="@lect.LectureName" type="text" class="form-control form-control-lg" placeholder="ENTER LECTURE NAME" required />
                </div>
                <div class="col-md-6 form-group">
                    <InputText @bind-Value="@lect.CourseCode" type="text" class="form-control form-control-lg" placeholder="ENTER COURSE CODE" required />
                </div>
                <div class="col-md-6 form-group mt-3 mt-md-0">
                    <InputText @bind-Value="@lect.Password" type="password" class="form-control form-control-lg" placeholder="ENTER PASSWORD" required />
                </div>
                <div align="center" class="col-md-6 form-group mt-3 mt-md-0">
                    <button class="btn btn-info w-50" type="submit">SUBMIT</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    public Lecture lect = new();
    public User user = new();
    public string Id;

    protected override async Task OnInitializedAsync()
    {
        var e = await _usr.CurrentUser();
        user = e;
        Id = e.Id;
    }

    async Task Post()
    {
        lect.UserId = Id;
        lect.Department = user.Department;
        var e = await _db.Lecture.AddAsync(lect);
        await _db.SaveChangesAsync();
        router.NavigateTo($"/modify/lecture/{e.Entity.LectureId}");
    }
}



