@page "/edit/lecture/{Id}"
@layout _LecturerLayout
@inject ApplicationDbContext _db
@inject NavigationManager router
@attribute [Authorize(Roles = "Lecturer")]

<div class="container-fluid col-lg-8" data-aos="zoom-out">
    <div class="card">
        <div class="card-body">
            <EditForm Model="@lect" OnSubmit="@Post" class="card-body">
                <h1><b>Edit Lecture</b></h1><br />
                <div class="col-md-6 form-group">
                    <InputText @bind-Value="@lect.LectureName" type="text" class="form-control form-control-lg" placeholder="ENTER LECTURE NAME" required />
                </div>
                <div class="col-md-6 form-group">
                    <InputText @bind-Value="@lect.CourseCode" type="text" class="form-control form-control-lg" placeholder="ENTER COURSE CODE" required />
                </div>
                <div class="col-md-6 form-group mt-3 mt-md-0">
                    <InputText @bind-Value="@lect.Password" type="password" class="form-control form-control-lg" placeholder="ENTER PASSWORD" required />
                </div>
                <div align="center" class="col-md-6 form-group mt-3 mt-md-0">
                    <button class="btn btn-info w-50" type="submit">SUBMIT</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }
    public Lecture lect = new();


    protected override async Task OnInitializedAsync()
    {
        lect = await _db.Lecture.FindAsync(Guid.Parse(Id));
    }

    async Task Post()
    {
        _db.Lecture.Update(lect);
        await _db.SaveChangesAsync();
        router.NavigateTo($"/modify/lecture/{Id}");
    }
}
