@page "/add/quiz"
@layout _LecturerLayout
@inject QuizDbContext _db
@inject NavigationManager router
@inject UserService _usr


<div class="container-fluid" data-aos="zoom-out">
    <div class="card">
        <div class="card-body">
            <EditForm Model="@quiz" OnSubmit="@Post" class="card-body">
                <h1><b>Add Quiz</b></h1><br />
                <div class="col-md-6 form-group">
                    <InputText @bind-Value="@quiz.Title" type="text" class="form-control form-control-lg" placeholder="ENTER QUIZ TITLE" required />
                </div>
                <div class="col-md-6 form-group">
                    <label>Duration</label>
                    <InputNumber @bind-Value="@quiz.Duration" type="text" class="form-control form-control-lg" placeholder="ENTER DURATION" required />
                </div>
                <div class="col-md-6 form-group mt-3 mt-md-0">
                    <label>Factor </label>
                    <InputNumber @bind-Value="@quiz.Factor" type="password" class="form-control form-control-lg" placeholder="ENTER FACTOR" required />
                </div>
                <div class="col-md-6 form-group mt-3 mt-md-0">
                    <InputText @bind-Value="@quiz.Password" type="password" class="form-control form-control-lg" placeholder="ENTER PASSWORD" required />
                </div>
                <div align="center" class="col-md-6 form-group mt-3 mt-md-0">
                    <button class="btn btn-info w-50" type="submit">SUBMIT</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    public PrivateQuiz quiz = new();
    public User user = new();
    public string Id;
    protected override async Task OnInitializedAsync()
    {
        var e = await _usr.CurrentUser();
        user = e;
        Id = e.Id;
    }

    async Task Post()
    {
        quiz.UserId = Id;
        quiz.Visible = false;
        quiz.Department = user.Department;
        var e = await _db.PrivateQuiz.AddAsync(quiz);
        await _db.SaveChangesAsync();
        router.NavigateTo($"/modify/quiz/{e.Entity.PrivateQuizId}");
    }
}



