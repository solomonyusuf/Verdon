@page "/lecture"
@inject ApplicationDbContext _db
@inject NavigationManager router

<section class="container col-md-8 card" style="background-image:url('assets/img/portfolio/app-3.jpg'); margin-top:30px;">
    <div data-aos="zoom-out">
        <EditForm Model="@lect" OnSubmit="@Post" class="card-body">
            <h1><b>LECTURE LOGIN</b></h1><br />
            @if (val != null)
            {
                <p>@val</p>
            }
            <div class="col-md-6 form-group">
                <InputText @bind-Value="@Id" type="text" class="form-control form-control-lg" placeholder="ENTER lECTURE PASS/ID" required />
            </div>
            <div class="col-md-6 form-group mt-3 mt-md-0">
                <InputText @bind-Value="@Pwd" type="password" class="form-control form-control-lg" placeholder="ENTER PASSWORD" required />
            </div>
            <div align="center" class="col-md-6 form-group mt-3 mt-md-0">
                <button class="btn btn-info w-50" type="submit">SUBMIT</button>
            </div>
        </EditForm>
    </div>
</section>
@code {
    public Lecture lect = new();
    public string Id;
    public string Pwd;
    public string val;
    async Task Post()
    {
        try
        {
            var req = await _db.Lecture.Where(x => x.LecturePass == int.Parse(Id)).SingleAsync();
            if (req.Password.Equals(Pwd))
            {
                router.NavigateTo($"/quiz/instruction/{req.LectureId}");
            }
            else
            {
                val = "Password does not match";
            }

        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

}